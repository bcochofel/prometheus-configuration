version: '3.7'

volumes:
    prometheus_data: {}
    alertmanager_data: {}
    grafana_data: {}
    mongodb_data: {}

services:
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=24h'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    ports:
      - 9090:9090
    networks:
      - promnet
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/-/healthy"]

  pushgateway:
    image: prom/pushgateway:latest
    ports:
      - 9091:9091
    networks:
      - promnet
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/-/healthy"]

  alertmanager:
    image: prom/alertmanager:latest
    volumes:
      - ./alertmanager:/etc/alertmanager
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
#      - '--cluster.peer=alertmanager2:9094'
    ports:
      - 9093:9093
#      - 9094:9094
    networks:
      - promnet
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9093/-/healthy"]

  karma:
    image: lmierzwa/karma:latest
    volumes:
      - ./karma/karma.yaml:/karma.yaml
    command:
      - '--config.file=/karma.yaml'
    ports:
      - 8080:8080
    networks:
      - promnet
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]

  kthxbye:
    image: lmierzwa/kthxbye:latest
    command:
     - '-alertmanager.addr'
     - 'alertmanager:9093'
     - '-extend-if-expiring-in'
     - '5m'
     - '-extend-by'
     - '12h'
     - '-extend-with-prefix'
     - 'ACK'
     - '-interval'
     - '60s'
    networks:
      - promnet
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.grafana
    ports:
      - 3000:3000
    networks:
      - promnet
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]

  alerta:
    image: alerta/alerta-web:latest
    ports:
      - 8088:8080
    depends_on:
      - db
    environment:
#      - DEBUG=1  # remove this line to turn DEBUG off
      - DATABASE_URL=mongodb://db:27017/monitoring
      - AUTH_REQUIRED=True
      - ADMIN_USERS=admin@alerta.io,devops@alerta.io #default password: alerta
      - PLUGINS=remote_ip,heartbeat,blackout,prometheus
      - ALERTMANAGER_API_URL=http://alertmanager:9093
    networks:
      - promnet
      - dbnet
    restart: unless-stopped

  db:
    image: mongo:latest
    volumes:
      - mongodb_data:/data/db
    networks:
      - dbnet
    restart: unless-stopped

networks:
  promnet:
    driver: bridge
  dbnet:
    driver: bridge
